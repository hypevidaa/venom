import { LockliftNetwork } from "@broxus/locklift-network";
import { Address, Contract, ProviderRpcClient } from "everscale-inpage-provider";
import { Account, SimpleAccountsStorage } from "everscale-standalone-client/nodejs";
import { Signer } from "everscale-standalone-client";
import { AccountFetcherResponse } from "@broxus/locklift-network/types";
export declare class Network {
    private readonly proxyNetwork;
    private readonly signer;
    private readonly accountStorage;
    private readonly provider;
    constructor(proxyNetwork: LockliftNetwork, signer: Signer, accountStorage: SimpleAccountsStorage, provider: ProviderRpcClient);
    insertWallet: (address: Address) => Account;
    insertAccount: <T>({ boc, address, abi, type, }: {
        address: Address;
        boc: string;
        abi: T;
        type?: "accountStuffBoc" | "fullAccountBoc" | undefined;
    }) => Contract<T>;
    getWallet: (id: number) => Account;
    getWallets: (count: number) => Account[];
}
